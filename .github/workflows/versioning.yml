name: Version Tagging and Release

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: versioning-main
  cancel-in-progress: false

jobs:
  tag_release:
    name: Compute and tag version (no repo commit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Compute next version (from tags only)
        id: version
        run: |
          git fetch --tags --force
          VERSION=$(python3 scripts/next_version.py | tr -d '\n')
          echo "next_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Computed version: $VERSION"
      - name: Create annotated tag if missing
        run: |
          VERSION="${{ steps.version.outputs.next_version }}"
          if git rev-parse -q --verify "refs/tags/${VERSION}" >/dev/null; then
            echo "Tag ${VERSION} already exists; skipping tag creation"
          else
            git tag -a "${VERSION}" -m "Release ${VERSION}"
            git push origin "${VERSION}"
          fi
      - name: Create GitHub release (auto notes)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.version.outputs.next_version }}"
          if gh release view "${VERSION}" >/dev/null 2>&1; then
            echo "Release ${VERSION} already exists"
          else
            gh release create "${VERSION}" --generate-notes --title "${VERSION}"
          fi
      - name: Output version
        run: |
          echo "Version: ${{ steps.version.outputs.next_version }}"

