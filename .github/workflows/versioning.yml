name: Versioning and Release

on:
  push:
    branches: ["prreviewJune23"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Skip if version bump commit
        if: contains(github.event.head_commit.message, '[skip version]')
        run: echo "Skipping version job due to [skip version] commit message" && exit 0
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Compute next version and update VERSION file
        run: |
          git fetch --tags --force
          VERSION=$(python3 scripts/next_version.py | tr -d '\n')
          echo "Computed version: $VERSION"
          git add VERSION
          git commit -m "chore(release): ${VERSION} [skip ci][skip version]" || echo "No changes to commit"
      - name: Push commit
        run: |
          # Push the version bump back to the same branch (prreviewJune23)
          git push origin HEAD:prreviewJune23
      - name: Tag and push
        run: |
          VERSION=$(cat VERSION | tr -d '\n')
          if git rev-parse -q --verify "refs/tags/${VERSION}" >/dev/null; then
            echo "Tag ${VERSION} already exists"
          else
            git tag -a "${VERSION}" -m "Release ${VERSION}"
            git push origin "${VERSION}"
          fi
      - name: Create GitHub release with autogenerated notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat VERSION | tr -d '\n')
          if gh release view "${VERSION}" >/dev/null 2>&1; then
            echo "Release ${VERSION} already exists"
          else
            gh release create "${VERSION}" --generate-notes --title "${VERSION}"
          fi

